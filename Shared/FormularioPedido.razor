@using GerenciarProdutos.Models
@using GerenciarProdutos.Services
@inject ClienteService ClienteService

<EditForm Model="pedido" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Cliente</label>
        <select class="form-select" @bind="pedido.ClienteId">
            <option value="">Selecione</option>
            @foreach (var cliente in clientes)
            {
                <option value="@cliente.Id">@cliente.Nome</option>
            }
        </select>
    </div>

    <div class="mb-3">
        <label class="form-label">Status</label>
        <InputSelect class="form-select" @bind-Value="pedido.Status">
            <option value="Pendente">Pendente</option>
            <option value="Processando">Processando</option>
            <option value="Concluído">Concluído</option>
            <option value="Cancelado">Cancelado</option>
        </InputSelect>
    </div>

    <ListaItensPedido Itens="@pedido.Itens" OnItemRemovido="HandleItemRemovido" OnAdicionarItem="HandleAdicionarItem" />

    <div class="mt-3">
        <button type="submit" class="btn btn-primary">Salvar</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
    </div>
</EditForm>

@code {
    [Parameter] public Pedido pedido { get; set; }
    [Parameter] public EventCallback<Pedido> OnSalvar { get; set; }
    [Parameter] public EventCallback OnCancelar { get; set; }

    [Parameter] public List<Cliente> Clientes { get; set; } = new();
    [Parameter] public List<Produto> Produtos { get; set; } = new();

    private List<Cliente> clientes;

    protected override void OnInitialized()
    {
        clientes = Clientes;
    }

    private async Task HandleValidSubmit()
    {
        await OnSalvar.InvokeAsync(pedido);
    }

    private async Task Cancelar()
    {
        await OnCancelar.InvokeAsync();
    }

    private void HandleItemRemovido(ItemPedido item)
    {
        pedido.Itens.Remove(item);
    }

    private void HandleAdicionarItem(ItemPedido novoItem)
    {
        novoItem.Id = pedido.Itens.Count + 1;
        pedido.Itens.Add(novoItem);
    }
}

